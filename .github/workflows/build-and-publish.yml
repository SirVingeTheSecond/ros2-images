name: Build and Publish Multi-Arch ROS 2 Images

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sundays

jobs:
  build-and-push-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push base image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.base
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:buildcache,mode=max
          build-args: |
            ROS_DISTRO=jazzy
            ROS_PACKAGE=ros-base

  build-and-push-desktop:
    needs: build-and-push-base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push desktop image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.desktop
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop:buildcache,mode=max
          build-args: |
            BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:${{ env.VERSION }}
            ROS_DISTRO=jazzy

  build-and-push-desktop-full:
    needs: build-and-push-desktop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push desktop-full image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.desktop-full
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop-full:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop-full:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop-full:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop-full:buildcache,mode=max
          build-args: |
            BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-desktop:${{ env.VERSION }}
            ROS_DISTRO=jazzy

  build-and-push-simulation:
    needs: build-and-push-base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=latest
          fi
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Build and push simulation image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile.simulation
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-simulation:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-simulation:${{ env.VERSION }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-simulation:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-simulation:buildcache,mode=max
          build-args: |
            BASE_IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/ros2-jazzy-base:${{ env.VERSION }}
            ROS_DISTRO=jazzy